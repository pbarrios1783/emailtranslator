import streamlit as st
import openai
from dotenv import load_dotenv
import os

# Cargar las variables de entorno desde el archivo .env
load_dotenv()

# Configurar la API de OpenAI desde la variable de entorno
openai.api_key = os.getenv("OPENAI_API_KEY")

if not openai.api_key:
    st.error("‚ùå No se encontr√≥ la clave de API de OpenAI. Aseg√∫rate de configurarla en un archivo .env.")

# --- Funci√≥n para interactuar con GPT-3.5 ---
def adaptar_email_gpt(email, cultura, formalidad, idioma):
    """
    Usa la API de OpenAI para adaptar el email seg√∫n la cultura, formalidad y traducir al idioma seleccionado.
    """
    prompt = f"""
    Quiero que act√∫es como un experto en comunicaci√≥n intercultural. 
    Reformula el siguiente email teniendo en cuenta:
    1. La cultura del lector: {cultura}.
    2. El nivel de formalidad: {formalidad}.
    3. Traduce el email al idioma: {idioma}.
    4. Mant√©n un tono respetuoso y profesional seg√∫n las indicaciones.

    Email original:
    {email}

    Reformula el email:
    """
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Eres un experto en comunicaci√≥n intercultural y redacci√≥n profesional."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.7,
        )
        email_adaptado = response["choices"][0]["message"]["content"]
        return email_adaptado

    except Exception as e:
        return f"‚ùå Error al conectarse con GPT-3.5: {str(e)}"


# --- Configuraci√≥n de la App ---
st.set_page_config(page_title="Adaptador de Emails Multilenguaje", page_icon="‚úâÔ∏è", layout="wide")

# Introducci√≥n
st.sidebar.subheader("üåç Importancia de la Comunicaci√≥n Intercultural")
st.sidebar.write(
    """
    En un mundo globalizado, la comunicaci√≥n intercultural es crucial para evitar malentendidos y construir relaciones exitosas.
    Cada cultura tiene normas y expectativas diferentes en cuanto a tono, formalidad e idioma. Esta herramienta te ayuda a adaptar
    tus correos electr√≥nicos seg√∫n estos factores para que sean m√°s efectivos y respetuosos.
    """
)

# Bot√≥n para escuchar la introducci√≥n
texto_introductorio = """
    Bienvenido a esta aplicaci√≥n de comunicaci√≥n intercultural. 
    Adaptar tus mensajes seg√∫n la cultura del destinatario es esencial en un mundo globalizado.
    """


# Instrucciones
st.sidebar.subheader("üõ†Ô∏è Instrucciones de Uso")
st.sidebar.write(
    """
    1. Escribe tu correo electr√≥nico en el cuadro principal.
    2. Selecciona:
        - La **cultura** del destinatario.
        - El **nivel de formalidad** deseado.
        - El **idioma** al que deseas traducir el correo.
    3. Haz clic en "Adaptar y Traducir Email".
    4. Copia el resultado adaptado y env√≠alo.
    """
)

# --- Pantalla Principal ---
st.title("üìß Adaptador de Emails Multilenguaje con GPT-3.5")
st.write(
    """
    Esta herramienta utiliza **ChatGPT (GPT-3.5)** para ayudarte a adaptar tus correos electr√≥nicos seg√∫n la cultura, 
    el nivel de formalidad del lector y traducirlos al idioma deseado.
    """
)

# --- Entrada del Email ---
st.subheader("‚úçÔ∏è Escribe tu email:")
email_original = st.text_area(
    "Copia aqu√≠ tu email. (Por ejemplo: Hola, espero que todo est√© bien. Me gustar√≠a discutir una propuesta contigo...)",
    height=200,
)

# --- Selecci√≥n de Cultura ---
st.subheader("üåç Selecciona la cultura del destinatario:")
cultura = st.selectbox(
    "Elige el pa√≠s o regi√≥n del lector:",
    ["Alemania", "Espa√±a", "Latinoam√©rica", "Holanda", "Inglaterra", "Jap√≥n", "Estados Unidos"],
)

# --- Selecci√≥n de Formalidad ---
st.subheader("üíº Selecciona el nivel de formalidad:")
formalidad = st.radio(
    "Elige el nivel de formalidad para el correo:",
    ["formal", "semiformal", "informal"],
)

# --- Selecci√≥n de Idioma ---
st.subheader("üåê Selecciona el idioma del correo:")
idioma = st.selectbox(
    "Elige el idioma al que quieres traducir el correo:",
    ["Espa√±ol castizo", "Espa√±ol latinoamericano", "Ingl√©s brit√°nico", "Ingl√©s americano", "Alem√°n", "Holand√©s", "Japon√©s", "Franc√©s"],
)

# --- Bot√≥n para Adaptar ---
if st.button("Adaptar y Traducir Email"):
    if email_original.strip():
        # Llamar a la funci√≥n para adaptar el email con GPT-3.5
        with st.spinner("Adaptando y traduciendo tu email con GPT-3.5..."):
            email_adaptado = adaptar_email_gpt(email_original, cultura, formalidad, idioma)

        # Mostrar resultado
        st.subheader("üìß Email Adaptado y Traducido:")
        st.text_area("Resultado:", value=email_adaptado, height=200)
    else:
        st.error("Por favor, introduce un email para adaptarlo y traducirlo.")





